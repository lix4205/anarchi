# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


# This script is executed at the end of the installation
# Don't forget you are chrooted in the fresh install while it run
# Put your stuff at the end of this file..
# 
#
# Some variables you can use :
# 	Username : NAME_USER=
# 	Les services systemd SYSTD_SOFT=
# 	Le disque sur lequel grub sera installé GRUB_DISK=
# 	L'interface reseau choisie NFSROOT=
# 	L'environnement de bureau DE=
#	L'architecture de la distribution ARCH=
# 	Le display manager DM=
# 	Le codage clavier X11 $X11_KEYMAP=

# BEGIN USER CONFIG
# Par defaut :
# - Ajoute un fond d'ecran pour lightdm
# - Installe les paquets de yaourt (DECONSEILLÉ)
# - Configure xinitrc, pour slim, et nodm
# - Lance le fichier custom.d/$NAME_USER

# Vous pouvez decommentez certaines parties et les modifier à votre gré :
# - Monter un partage nfs et l'inscrire dans /etc/fstab ***
# - *** IMPORTANT ! Decommentez aussi la ligne concernant le demontage en fin de fichier 
# - Copier des fichiers de configurations particuliers depuis le serveur NFS
# - Installer des logiciels selon l'environnement de bureau installé


ARCH_PACKAGES="$( [[ "$ARCH" == "x64" ]] && echo "x86_64" || echo "$ARCH" )"
CUSTOM_USER_SCRIPT="/tmp/files/custom.d/$NAME_USER"
# random background LIGHTDM
if [[ $DM == "lightdm" ]]; then
	IMG_BG=$(find "/tmp/files/imgs/" -maxdepth 1 -type f | shuf | head -n 1 )
	EXT_BG_NAME=$( echo "$IMG_BG" | sed "s/.*\.//")
	BG_NAME="bg.$EXT_BG_NAME"
	cp "$IMG_BG" /usr/share/pixmaps/$BG_NAME
	sed -i "s/.*background=.*/background=\/usr\/share\/pixmaps\/$BG_NAME/" "/etc/lightdm/lightdm-gtk-greeter.conf"                
fi
# END

# BEGIN binary paths session 
# Used to complete xinitrc for slim and nodm
declare -A binde=(
	[plasma]="startkde"
	[gnome]="gnome-session"
	[cinnamon]="cinnamon-session"
	[mate]="mate-session"
	[lxde]="startlxde"
	[xfce]="startxfce4"
	[lxqt]="startlxqt"
	[fluxbox]="startfluxbox"
	[enlightenment]="enlightenment_start"

)
# # END

LOG_EXE="/tmp/anarchi.log"

# # BEGIN fstab perso & mount new entry...
# Pacman need architecture for i686 installation from x64 
# so we will use $pacman as pacman --arch (x86_64/i686)
pacman="pacman --arch $ARCH_PACKAGES"
yaourt="yaourt --arch $ARCH_PACKAGES"

# BEGIN  install packages in files/de/yaourt.conf via AUR. 
# files/de/yaourt.conf is empty by default 
if [ "$LIST_YAOURT" != "" ]; then
	rep=
	while [[ "$rep" == "" ]]; do
		echo -en "\033[01;37m  -> Install AUR packages Y/n ?\033[00m ( $LIST_YAOURT ) "
		read -n 1 rep
		case "$rep" in 
			o|O|y|Y)
				echo "$LIST_YAOURT install" 
				su $NAME_USER -c "yaourt --arch $ARCH -Sy --noconfirm $LIST_YAOURT"
				break				
			;;
			n|N) break;;
			*) rep= ;;
		
		esac
	done
fi
# BEGIN configurations by the display-manager
case $DM in
	slim) :
		su $NAME_USER -c "echo \"exec ${binde[$DE]}\" > /home/$NAME_USER/.xinitrc"
	;;
	nodm) :
		sed -i "s/^NODM_USER=.*/NODM_USER=$NAME_USER/" /etc/nodm.conf
		sed -i "s/^NODM_XSESSION=.*/NODM_XSESSION=\/home\/$NAME_USER\/.xinitrc/" /etc/nodm.conf
		su $NAME_USER -c "echo \"exec ${binde[$DE]}\" > /home/$NAME_USER/.xinitrc && chmod +x /home/$NAME_USER/.xinitrc" 
		echo "#%PAM-1.0

auth      include   system-login
account   include   system-login
password  include   system-login
session   include   system-login" > "/etc/pam.d/nodm"
	;;
# #			Generate sddm.conf and change theme
	sddm)
		sddm --example-config > /etc/sddm.conf
# 		sed -i "s/maui/breeze/" /etc/sddm.conf
	;;
# 		gdm) : ;;
# 		lightdm) : ;;
# 		lxdm) : ;;
esac
# END


# # BEGIN Serveur NFS 
# # Va inscrire dans fstab la ligne correspondant au montage permanent du partage NFS
# # avec x-systemd.automount,x-systemd.device-timeout=1s
# # I use this directory to mount my NFS server...
DIR_SRV=/media/srv
# ...with this IP...
IP_SRV="192.168.1.5"
# Write in fstab
! cat /etc/fstab | grep -q $IP_SRV && 
echo -e "# $IP_SRV:/ on $DIR_SRV\n$IP_SRV:/	$DIR_SRV	nfs    x-systemd.automount,x-systemd.device-timeout=1s   0 0" >> /etc/fstab
# Creation du repertoire
[[ ! -e /media/srv ]] && 
mkdir -p /media/{srv,tmp} && 
echo "==> Creating directories /media/{srv,tmp}"
# Et on monte pour les configurations
echo "==> Wait while mounting $DIR_SRV" && 
mount $DIR_SRV
# # END
# 
# # BEGIN Configuration utilisateur
# # On va monter le partage NFS pour copier les configurations personalisées...
# # Later, I'll copy my NAME_USER config from DIR_USR_CONF on my server...
DIR_USR_CONF=$DIR_SRV/confs
# Default user conf
DEFAULT_USER="lix"

if [[ -e $DIR_USR_CONF/$NAME_USER ]]; then
    su $NAME_USER -c "bash /tmp/files/extras/copyconf.sh \"$DIR_USR_CONF/$NAME_USER\" $NAME_USER $DE" 
    su - $NAME_USER -c "cp -PR $DIR_USR_CONF/$NAME_USER/* ."
elif [[ -e $DIR_USR_CONF/$DEFAULT_USER ]]; then 
    su $NAME_USER -c "bash /tmp/files/extras/copyconf.sh \"$DIR_USR_CONF/$DEFAULT_USER\" $NAME_USER $DE"; 
    su - $NAME_USER -c "cp -PR $DIR_USR_CONF/$DEFAULT_USER/* ."
fi

[[ $? -eq 0 ]] && echo "==> La configuration de $NAME_USER à été créée !"
# # END


# BEGIN configurations by the desktop-environnement
# Ici quelques commandes pour installer yakuake sous kde ou tilda sur gtk
case $DE in
	plasma)
		echo -n "==> Installation de yakuake"
		$pacman -Sy --noconfirm --needed yakuake >> $LOG_EXE 2>&1 && echo "...ok" || echo -e "...echec !\n==> Consultez $LOG_EXE  pour plus de détail"
	;;
	# Cinnamon has tilda as terminal
	mate|xfce|gnome) 
		echo -n "==> Installation de tilda"
		$pacman -Sy --noconfirm --needed tilda >> $LOG_EXE 2>&1 && echo "...ok" || echo -e "...echec !\n==> Consultez $LOG_EXE  pour plus de détail"
	;;
	lxqt) : ;;
	fluxbox)
		su $NAME_USER -c "echo \"exec startfluxbox\" > /home/$NAME_USER/.xinitrc" 
  ;;
esac
# END

# # Some aliases
# su $NAME_USER -c "echo -e \"# Some aliases\\nalias lsl=\\\"ls -l\\\"\nalias lsa=\\\"ls -a\\\" \" >> /home/$NAME_USER/.bashrc"

# # BEGIN demontage du serveur
# # On force le démontager du partage
until ! mountpoint -q $DIR_SRV; do        
        umount $DIR_SRV >> /dev/null 2>&1
        sleep 0.5
done
# # END 

# # BEGIN execute files/custom.d/$NAME_USER
if [[ -e "$CUSTOM_USER_SCRIPT" ]]; then
    source "$CUSTOM_USER_SCRIPT"
fi
# END


# BEGIN ${dm_editor} is a tab which contains the editor list associated with the DE
declare -A dm_editor=(
	[e_plasma]="kate"
	[e_gnome]="gedit"
	[e_mate]="pluma"
	[e_lxde]="leafpad"
	[e_xfce]="mousepad"
	[e_lxqt]="leafpad"
# 	[e_fluxbox]="nano"
)

[[ -z ${dm_editor[e_$DE]} ]] && GUI_EDITOR="${dm_editor[e_$DE]}" &&
sed -i "s/export VISUAL=.*/export VISUAL=\"\$(if [[ -n \$DISPLAY ]]; then echo '$GUI_EDITOR'; else echo 'nano'; fi)\"/" /home/*/.bashrc
# END

# # BEGIN fill .bash_history with usefull command for starting
echo "
systemctl stop $DM
systemctl start $DM
systemctl start $NAME_USER
systemctl stop $NAME_USER
systemctl start dux
systemctl stop dux
systemctl stop media-srv.automount
systemctl daemon-reload
systemctl poweroff
systemctl reboot
ip addr
fdisk -l
df -h
du -h -d 1 .
mount /dev/sda1 /media/tmp
systemctl status $NFSROOT
su - $NAME_USER
modprobe -a vboxdrv vboxnetadp vboxnetflt vboxpci
rmdir /var/cache/pacman/pkg/ && ln -s $DIR_SRV/packages/$ARCH/pkg/ /var/cache/pacman/
mv /var/cache/pacman/pkg/* /media/srv/packages/x64/pkg/
rm /var/cache/pacman/pkg/*
ls -l /var/cache/pacman/pkg
pacman -Syu
journalctl -fn 50
journalctl -fn 50 -u $DM
bash $DIR_SRV/scripts/arch-utils.sh
mount $DIR_SRV/


" > /root/.bash_history
# # END .bash_history

echo "DIR_SRV=/media/srv
DIR_SCR=\$DIR_SRV/scripts" >> /root/.bashrc

# BEGIN X11 KEYBOARD CONFIG ( Ctrl + Alt + backspace kill xserver)
# It's for a french keyboard ! Remove latin9 !!!
echo -e "Section \"InputClass\"\n\tIdentifier \"system-keyboard\"\n\tMatchIsKeyboard \"on\"\n\tOption \"XkbLayout\" \"${X11_KEYMAP}\"\n\tOption \"XkbModel\" \"pc105\"\n\tOption \"XkbVariant\" \"latin9\"\n\tOption \"XkbOptions\" \"terminate:ctrl_alt_bksp\"\nEndSection" > /etc/X11/xorg.conf.d/00-keyboard.conf
# END

